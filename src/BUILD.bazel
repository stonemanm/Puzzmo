# Builds the libraries and executables for the repository.

load("@rules_cc//cc:defs.bzl", "cc_binary")

package(default_visibility = ["//visibility:public"])

############
# Binaries #
############

cc_binary(
    name = "play_bongo",
    srcs = ["play_bongo.cc"],
    data = [
        "//data:bongo_board.txt",
        "//data:bongo_tiles.txt",
    ],
    deps = [
        ":bongo_dictionary",
        ":bongo_gamestate",
        ":bongo_solver",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/flags:flag",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/status:status",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
    ],
)

cc_binary(
    name = "play_pile_up_poker",
    srcs = ["play_pile_up_poker.cc"],
    data = [
        "//data:pile_up_poker_cards.txt",
    ],
    deps = [
        ":pile_up_poker_solver",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/strings",
    ],
)

cc_binary(
    name = "play_spelltower",
    srcs = ["play_spelltower.cc"],
    data = [
        "//data:spelltower_board.txt",
    ],
    deps = [
        ":dictionary_utils",
        ":spelltower_board",
        ":spelltower_solver",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
        "@re2",
    ],
)

cc_binary(
    name = "play_typeshift",
    srcs = ["play_typeshift.cc"],
    data = [
        "//data:typeshift_board.txt",
    ],
    deps = [
        ":dictionary_utils",
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
    ],
)

#####################
# Libraries & Tests #
#####################

cc_library(
    name = "bongo_dictionary",
    srcs = ["bongo_dictionary.cc"],
    hdrs = ["bongo_dictionary.h"],
    data = [
        "//data:words_bongo.txt",
        "//data:words_bongo_common.txt",
    ],
    deps = [
        ":letter_count",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/flags:flag",
        "@abseil-cpp//absl/status:status",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
        "@re2",
    ],
)

cc_test(
    name = "bongo_dictionary_test",
    size = "small",
    srcs = ["bongo_dictionary_test.cc"],
    deps = [
        ":bongo_dictionary",
        "@abseil-cpp//absl/status:status_matchers",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "bongo_gamestate",
    srcs = ["bongo_gamestate.cc"],
    hdrs = ["bongo_gamestate.h"],
    deps = [
        ":letter_count",
        ":point",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/status:status",
        "@abseil-cpp//absl/strings",
    ],
)

cc_test(
    name = "bongo_gamestate_test",
    size = "small",
    srcs = ["bongo_gamestate_test.cc"],
    deps = [
        ":bongo_gamestate",
        "@abseil-cpp//absl/status:status_matchers",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "bongo_solver",
    srcs = ["bongo_solver.cc"],
    hdrs = ["bongo_solver.h"],
    deps = [
        ":bongo_gamestate",
        ":dictionary_utils",
        ":letter_count",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/status:status",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
    ],
)

cc_library(
    name = "card",
    srcs = ["card.cc"],
    hdrs = ["card.h"],
    deps = [],
)

cc_library(
    name = "dictionary_utils",
    srcs = ["dictionary_utils.cc"],
    hdrs = ["dictionary_utils.h"],
    data = [
        "//data:words_bongo.txt",
        "//data:words_bongo_common.txt",
        "//data:words_puzzmo.txt",
    ],
    deps = [
        "letter_count",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/flags:flag",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
        "@re2",
    ],
)

cc_test(
    name = "dictionary_utils_test",
    size = "small",
    srcs = ["dictionary_utils_test.cc"],
    deps = [
        ":dictionary_utils",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "letter_count",
    srcs = ["letter_count.cc"],
    hdrs = ["letter_count.h"],
    deps = [
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
    ],
)

cc_test(
    name = "letter_count_test",
    size = "small",
    srcs = ["letter_count_test.cc"],
    deps = [
        ":letter_count",
        "@abseil-cpp//absl/status:status",
        "@abseil-cpp//absl/status:status_matchers",
        "@abseil-cpp//absl/strings",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "pile_up_poker_solver",
    srcs = ["pile_up_poker_solver.cc"],
    hdrs = ["pile_up_poker_solver.h"],
    deps = [
        ":card",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/strings",
    ],
)

cc_library(
    name = "point",
    srcs = ["point.cc"],
    hdrs = ["point.h"],
    deps = [
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/strings",
    ],
)

cc_test(
    name = "point_test",
    size = "small",
    srcs = ["point_test.cc"],
    deps = [
        ":point",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "spelltower_board",
    srcs = ["spelltower_board.cc"],
    hdrs = ["spelltower_board.h"],
    deps = [
        ":letter_count",
        ":point",
        "@abseil-cpp//absl/container:flat_hash_set",
        "@abseil-cpp//absl/strings",
    ],
)

cc_test(
    name = "spelltower_board_test",
    size = "small",
    srcs = ["spelltower_board_test.cc"],
    deps = [
        ":spelltower_board",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "spelltower_solver",
    srcs = ["spelltower_solver.cc"],
    hdrs = ["spelltower_solver.h"],
    deps = [
        ":dictionary_utils",
        ":point",
        ":spelltower_board",
        "@abseil-cpp//absl/container:btree",
        "@abseil-cpp//absl/container:flat_hash_set",
    ],
)
